name: Build and release - Linux

# on:
#   workflow_run:
#     workflows: "Build and release - Windows"
#     types: completed
on:
  workflow_dispatch:
  push:
    branches: [ "wip/create-install" ]

jobs:
  build-and-release:
    # if: ${{ github.event.workflow_run.conclusion == 'success' }}  # Only run if the previous workflow succeeded
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Fetch all history for all tags and branches
      
      - name: Determine most recent tag in branch and set misc variables, based on that
        run: |
          cd $GITHUB_WORKSPACE
          MOST_RECENT_TAG_LOCAL=$(git describe --tags --abbrev=0)
          echo $MOST_RECENT_TAG_LOCAL
          echo "MOST_RECENT_TAG=$MOST_RECENT_TAG_LOCAL" >> $GITHUB_ENV
          echo "OUTPUT_BINARIES_NAME=NucleusOneExporter-$MOST_RECENT_TAG_LOCAL-Linux-Binaries.zip" >> $GITHUB_ENV

      - name: Install dependencies needed for builiding
        run: |
          echo ${{ env.MOST_RECENT_TAG }}
          echo ${{ env.OUTPUT_BINARIES_NAME }}
          sudo apt-get update
          sudo apt-get install clang cmake ninja-build pkg-config libgtk-3-dev liblzma-dev

      # Note: This workflow uses the latest stable version of the Flutter SDK.
      - name: Install Flutter SDK
        run: |
          mkdir ~/dev
          cd ~/dev
          git clone https://github.com/flutter/flutter.git -b stable
          export PATH="$PATH:`pwd`/flutter/bin"
          /bin/bash -c "yes | flutter doctor --android-licenses"
      
      - id: buildExporter
        name: Build Linux executable
        run: |
          export PATH="$PATH:~/dev/flutter/bin"
          cd $GITHUB_WORKSPACE
          flutter build linux --release
      
      - name: Compress output to ZIP file
        run: |
          zip -r build/linux/x64/release/bundle/${{ env.OUTPUT_BINARIES_NAME }} build/linux/x64/release/bundle
      
      - name: Create GitHub release draft
        uses: softprops/action-gh-release@v1
        with:
          draft: true
          tag_name: ${{ env.MOST_RECENT_TAG }}
          files: |
            ./build/linux/x64/release/bundle/${{ env.OUTPUT_BINARIES_NAME }}
          fail_on_unmatched_files: true